/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IQueryService,
  IQueryServiceInterface,
} from "../../../contracts/interfaces/IQueryService";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "auctionAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
    ],
    name: "getAuctionDetailsData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "auctionHouseAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "info",
            type: "string",
          },
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "address",
            name: "auctionToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minBid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endsAt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "highestBidderAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "highestBidderAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "bidder",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
              },
            ],
            internalType: "struct IAuction.Bid[]",
            name: "allBids",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "pendingReturnsAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
        ],
        internalType: "struct IQueryService.AuctionDetailsData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "auctionHouseServiceAddress",
        type: "address",
      },
    ],
    name: "getAuctionHouseData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "info",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "currentFeeNumerator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentFeeDenominator",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "contractAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endsAt",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymentToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "highestBid",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "closed",
                type: "bool",
              },
            ],
            internalType: "struct IQueryService.AuctionListItemData[]",
            name: "auctions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "totalAmount",
                type: "uint256",
              },
            ],
            internalType: "struct IQueryService.ProtocolFeeData[]",
            name: "totalFees",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "totalAmount",
                type: "uint256",
              },
            ],
            internalType: "struct IQueryService.ProtocolFeeData[]",
            name: "totalFeesToHarvest",
            type: "tuple[]",
          },
          {
            internalType: "address[]",
            name: "auctionsToHarvest",
            type: "address[]",
          },
        ],
        internalType: "struct IQueryService.AuctionHouseData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IQueryService__factory {
  static readonly abi = _abi;
  static createInterface(): IQueryServiceInterface {
    return new utils.Interface(_abi) as IQueryServiceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IQueryService {
    return new Contract(address, _abi, signerOrProvider) as IQueryService;
  }
}
